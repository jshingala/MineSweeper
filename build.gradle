plugins {
    id 'java'
    id 'application'
}

repositories {

    mavenCentral()
}

project.ext.lwjglVersion = "3.3.2"  // Updated version
project.ext.jomlVersion = "1.10.5"

// Detect if running on Apple Silicon
def isMacArm = System.getProperty("os.name").toLowerCase().contains("mac") &&
        System.getProperty("os.arch").toLowerCase().contains("aarch64")

project.ext.lwjglNatives = isMacArm ? "natives-macos-arm64" : "natives-macos"

dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.joml:joml:${jomlVersion}"

    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"
}

application {
    mainClass = 'pkgDriver.Driver'
}

run {
    // For Mac
    if (System.getProperty("os.name").toLowerCase().contains("mac")) {
            jvmArgs = ["-XstartOnFirstThread"]
        systemProperty "java.awt.headless", "true"
    }
}

// Ensure all JavaExec tasks have the right VM options
tasks.withType(JavaExec) {
    if (System.getProperty("os.name").toLowerCase().contains("mac")) {
        jvmArgs = ["-XstartOnFirstThread"]
        systemProperty "java.awt.headless", "true"
    }
}